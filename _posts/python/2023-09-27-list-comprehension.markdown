---
layout: post
title:  "[파이썬] 리스트 컴프리헨션(list comprehension)"
date:   2023-09-27 22:52:00 +0900
categories: 
  - Dev
  - python
tag: python
comments: true
---

* this unordered seed list will be replaced by the toc
{:toc}

## 리스트 컴프리헨션(list comprehension)이란?

### 정의 및 특징

리스트 컴프리헨션(list comprehension)은 리스트를 초기화하는 방법 중 하나로서 대괄호("[]") 안에 조건문이나 반복문을 넣는 방식으로 리스트를 초기화하는 방식이다. 리스트 컴프리헨션은 필요한 리스트를 생성할 때 보다 간결하고 직관적으로 코드를 작성할 수 있도록 도와준다.

### 예시1: 일반적인 리스트 생성 방법과 비교

예시로서 간단하게 1부터 100까지의 정수 중에서 짝수만 포함하는 리스틀 생성해 보겠다. 특히 반복문과 조건문을 각각 나누어 사용하여 리스트를 생성하는 방법과 나누어 살펴보도록 하겠다.

1. 일반적인 방법  
    먼저, 리스트를 직접 생성하고, 반복문을 수행하고 그 안에서 조건문을 수행하는 코드이다.

    ```py
      # 리스트 생성
      arr = []

      # 1부터 100까지 1씩 증가하는 반복문
      for i in range(1, 101):
        # 2로 나누어 떨어지는지 확인하는 조건문
        if (i%2 == 0):
          arr.append(i)
      print(arr)
    ```

    출력 결과

    ```text
    [2, 4, 6, 8, 10, ...(중략)... 94, 96, 98, 100]
    ```

2. 리스트 컴프리헨션 활용한 방법  
    다음으로 리스트 컴프리헨션으로 작성한 코드이다.

    ```py
      arr = [i for i in range(1, 101) if i % 2 == 0]
      print(arr)
    ```

    출력 결과

    ```text
    [2, 4, 6, 8, 10, ...(중략)... 94, 96, 98, 100]
    ```

    주석을 제외하고 5줄로 작성했던 코드를 단 2줄로 줄일 수 있었다. 이처럼 리스트 컴프리헨션은 코드를 간결하고 직관적으로 작성하는 데 큰 도움이 된다.

### 예시2: 2차우너 리스트 초기화

1. 리스트 컴프리헨션 활용  
    리스트 컴프리헨션은 2차원 리스트를 초기화할 때 더욱 유용하다. 예를 들어 3x4 차원의 2차원 리스트를 생성해 본다고 가정해 보겠다.

    ```py
      # N x M 크기의 2차원 리스트 초기화
      n = 3
      m = 4
      arr = [[0] * m for _ in range(n)]
      print(arr)
    ```

    출력 결과

    ```text
      [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]
    ```

2. 리스트 컴프리헨션 활용 X  
    특히 특정 크기의 2차원 배열을 초기화할 때는 반드시 리스트 컴프리헨션을 이용해야 한다. 아래와 같이 2차원 리스트를 초기화하게 되면 예상치 못한 결괏값이 나올 수 있다.

    ```py
      # N x M 크기의 2차원 리스트 초기화
      n = 3
      m = 4
      arr = [[0] * m] * n
      print(arr)  # [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]

      arr[1][1] = 7
      print(arr)  # [[0, 7, 0, 0], [0, 7, 0, 0], [0, 7, 0, 0]]
    ```

    위의 코드에서 특정 인덱스에 해당되는 원소의 값만 변경을 시도했지만, 출력 결과에서 볼 수 있듯이 리스트 내 인덱스가 1인 모든 원소의 값이 변경된 것을 확인할 수 있다. 이러한 현상은 내부적으로 포함된 3개의 리스트가 모두 동일한 객체의 3개에 대한 참조값으로 여겨지기 때문이다. 따라서 특정 크기를 갖는 2차원 리스트를 초기화 할 때는 반드시 리스트 컴프리헨션을 사용해야 한다.


> 출처: <https://heytech.tistory.com/70>
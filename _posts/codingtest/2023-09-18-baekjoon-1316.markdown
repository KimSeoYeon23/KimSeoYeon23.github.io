---
layout: post
title:  "백준 알고리즘 1316번"
date:   2023-09-18 21:50:00 +0900
categories:
  - Dev
  - codingtest
tag: codingtest
comments: true
---

* this unordered seed list will be replaced by the toc
{:toc}

## 백준 알고리즘 1316번 그룹 단어 체커

### 문제

그룹 단어란 단어에 존재하는 모든 문자에 대해서, 각 문자가 연속해서 나타나는 경우만을 말한다. 예를 들면, ccazzzzbb는 c, a, z, b가 모두 연속해서 나타나고, kin도 k, i, n이 연속해서 나타나기 때문에 그룹 단어이지만, aabbbccb는 b가 떨어져서 나타나기 때문에 그룹 단어가 아니다.

단어 N개를 입력으로 받아 그룹 단어의 개술르 출력하는 프로그램을 작성하시오.

### 입력

첫째 줄에 단어의 개수 N이 들어온다. N은 100보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에 단어가 들어온다. 단어는 알파벳 소문자로만 되어있고 중복되지 않으며, 길이는 최대 100이다.

### 출력

첫째 줄에 그룹 단어의 개수를 출력한다.

### 예제

| 입력 | 출력 |
| --- | --- |
| `3` <br/> `happy` <br/> `new` <br/> `year` | `3` |
| `4` <br/> `aba` <br/> `abab` <br/> `abcabc` <br/> `a` | `1` |
| `5` <br/> `ab` <br/> `aa` <br/> `aca` <br/> `ba` <br/> `bb` | `4` |
| `2` <br/> `yzyzy` <br/> `zyzyz` | `0` |
| `1` <br/> `z` | `1` |
| `9` <br/> `aaa` <br/> `aaazbz` <br/> `babb` <br/> `aazz` <br/> `azbz` <br/> `aabbaa` <br/> `abacc` <br/> `aba` <br/> `zzaz` | `2` |

### 풀이

```py
n = int(input())
group_word = 0

for _ in range(n):
  word = input()
  error = 0
  for index in range(len(word)-1):
    if word[index] != word[index+1]:
      new_word = word[index+1:]
      if new_word.count(word[index]) > 0:
        error += 1
  if error == 0:
    group_word += 1
print(group_word)
```

1. 맨 처음 단어의 개수 `n`을 입력받으면 `for`문을 `n`번 반복한다.
   1. `for`문을 시작하기 전 그룹 단어의 개수를 저장할 변수로 `group_word`를 생성해서 0을 선언했다.
   2. `for`문을 반복하는 동안 단어를 입력받으면 `word` 변수에 선언하고 `error` 변수는 그룹 단어가 아닌 경우를 찾는 데 사용했다.
2. `range()` 함수로 입력받는 단어의 개수보다 1개 적은 숫자의 범위를 생성한다. 입력받은 문자열의 인덱스로 이용했다.
   1. `if` 조건식에서 연단 두 알파벳을 비교해서 두 알파벳이 다른 경우 남은 문자열을 새로운 단어로 생성하고, `count()` 함수로 동일한 알파벳이 있는지를 체크한다.
   2. 만일 `count()` 함수로 반환된 숫자가 0이 아닌 경우는 그룹 단어가 아니고 `error` 변수에 `1`을 더했다.
3. 두 번째 `for` 문에 끝나고 `error` 변수가 0이면 그룹 단어이다. 
   1. `if` 조건식을 이용해서 `error` 변수가 0인 경우에 `group_word` 변수의 숫자를 1 더한다.